#!/bin/bash

## Setup the symlinks required to point to this suite of files.

bashDir="$HOME/.bash"
archiveDir="$bashDir/local/archive"
localDir="$bashDir/local"

# ↓↓↓ def checkForCorrectPWD()
checkForCorrectPWD() {
    local _DOCSTRING="Check that we are in ~/.bash. "
    local _USAGE="Usage: checkForCorrectPWD "

    local zero=$0
    local conon="$(readlink -f "$zero")"
    local dir="$(dirname "$conon")"

    if [[ "$dir" != "$bashDir" ]]; then
        echo "Please move the package to $bashDir and run setup again." >&2
        exit 1
    fi
}
# ↑↑↑ END checkForCorrectPWD
# ↓↓↓ def createSymlinksInHomeDir()
createSymlinksInHomeDir() {
    local _DOCSTRING="Creates symlinks for files in the home dir pointing to our .bash dir. If there are existing files there, they are moved to the archiveDir."
    local _USAGE="Usage: createSymlinksInHomeDir "

    for file in .bashrc .bash_logout .bash_history .inputrc
    do
        target="$HOME/$file"
        if [[ ! -L "$target" ]]; then
            if [[ -f "$target" ]]; then # If the file is not a symlink and if the file exists and is a normal file.
                mv -f "$target" "$archiveDir/original-$file" && ln -s "$HOME/.bash/$file" "$target" 
            else
                ln -s "$HOME/.bash/$file" "$target" 
            fi
        fi
    done
    
}
# ↑↑↑ END createSymlinksInHomeDir
# ↓↓↓ def createDebuggerFifos()
createDebuggerFifos() {
    local _DOCSTRING="Create the debugger input and output fifos if not already there."
    local _USAGE="Usage: createDebuggerFifos "

    for filename in "$bashDir"/.bash_debug_{input,output} # For both the input and output filesnames
    do
        if [[ ! -p "$filename" ]]; then # If the target is not a fifo
            if [[ -f "$filename" ]]; then # If there is a regular file at the location we need
                mv "$filename" "$filename-old-$(date +%y%m%d)" # Move that file to a holding name
            fi
            mkfifo "$filename" # Create the fifo we want.
        fi
    done
}
# ↑↑↑ END createDebuggerFifos
# ↓↓↓ def createEmptyFiles()
createEmptyFiles() {
    local _DOCSTRING="Creates the empty files required."
    local _USAGE="Usage: createEmptyFiles "

    touch $localDir/.bash_persistent_marks
    touch $localDir/.bash_places
}
# ↑↑↑ END createEmptyFiles


# ↓↓↓ def main()
main() {
    local _DOCSTRING="The main setup function."
    local _USAGE="Usage: main "

    checkForCorrectPWD
    createSymlinksInHomeDir
    createDebuggerFifos
    createEmptyFiles
}
# ↑↑↑ END main

main "$@"



