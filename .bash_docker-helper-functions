# ↓↓↓ def list-containers()
list-containers() {
    local _DOCSTRING="List all docker containers, across all status levels."
    local _USAGE="Usage: list-containers [requestedType]"
    functionTracingDebug "$@"

    local requestedType="${1:-none}"

    local t name color line sectionTitleText columnHeaders

    # Parse args

    declare -A typeToColor
    typeToColor+=(
            [created]="$liabilityPink"
            [running]="$green"
            [paused]="$yellow"
            [restarting]="$dodgerBlue"
            [exited]="$princePurple"
            [dead]="$red"
            [removing]="$alertRed"
        )

    # Parse args
    if keyInArray "$requestedType" typeToColor; then
        # Print only the requested section
        :
    elif [[ "$requestedType" == "all" ]]; then
        # Print all sections
        :
    elif [[ "$requestedType" == "none" ]]; then
        # No arg supplied
        :
    else
        echo "Unknown option: $requestedType" >&2
        return 1
    fi


    for name in ${!typeToColor[*]}
    do
        # Filter sections to be printed based on arguments
        if [[ "$requestedType" == none || "$requestedType" == all ]]; then
            : # Continue to print the section
        elif [[ "$requestedType" != "$name" ]]; then
            continue # Move on to the next section
        fi

        color="${typeToColor[$name]}"
        unset buffer
        declare -a buffer

        while read line
        do
            buffer+=("$line") 
        done < <(sudo docker container ls --filter status=$name | indentIt 1)
        unset line

        local line
        if [[ "${buffer[*]:1}" != "" || "$requestedType" == "all" ]]; then # if the 2nd to last lines are not empty
            sectionTitleText="${color}${name}${normal}:" # Header
            columnHeaders="${buffer[0]}"

            echo "$sectionTitleText"
            echo "$columnHeaders"

            for line in "${buffer[@]:1}" # Skip the first line (the built in header)
            do
                echo "$line"
            done
        fi
    done
}
# ↑↑↑ END list-containers

